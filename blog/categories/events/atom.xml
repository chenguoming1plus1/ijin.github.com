<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: events | @ijin]]></title>
  <link href="http://ijin.github.io/blog/categories/events/atom.xml" rel="self"/>
  <link href="http://ijin.github.io/"/>
  <updated>2015-11-04T11:14:54+09:00</updated>
  <id>http://ijin.github.io/</id>
  <author>
    <name><![CDATA[Michael H. Oshita]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AWS re:Invent 2015に参加してきた]]></title>
    <link href="http://ijin.github.io/blog/2015/10/26/aws-re-invent-2015/"/>
    <updated>2015-10-26T02:26:00+09:00</updated>
    <id>http://ijin.github.io/blog/2015/10/26/aws-re-invent-2015</id>
    <content type="html"><![CDATA[<p>今年で3度目の参加となるAWS re:Invent。
忘れない内に記録を残しておきます。</p>

<h2>Day 0</h2>

<h3>Game Day</h3>

<p>Unicornを貸し出すサービスを展開する仮想のスタートアップ企業にDevOpsチームとして最近入社したという設定。前任者が退職しており、資料が少ない中でサービスオープンに立ち会いつつ、様々な困難に直面するというフルデイ・イベント。
今までのGame Dayと違って面白いのはパフォーマンス・チューニングをしつつも、コストも意識しながらチーム間でスコアを競争するところ。アプリは触れないので、<a href="http://isucon.net/">ISUCON</a>よりは昔やった<a href="/blog/2012/07/03/tuningathon4/">チューニンガソン</a>に近い感じ。</p>

<p>スコアは累積の損益。アーキテクチャによっては利益が出たり損失が出たりする。例えば、多くのリクエストが処理できると利益は増すが、AWSのリソースが多いと費用が掛かって損失になりうる。
当然最初は各チームは赤字から始まり、時間とともに積算した利益によって黒転して行く様が目新しかった。</p>

<p>結果、48チーム中で<strong>6位</strong>。（上位2チームはチートで失格となったので<strong>実質は4位</strong>）</p>

<p><img src="https://lh3.googleusercontent.com/H8zoy7lrftuIo9ZQTN_LsUC3KsiGsNkOJbPzuW4vAxy4o6IOAH8=w547-h298-no"></p>

<p><div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr"><a href="https://twitter.com/ijin">@ijin</a> <a href="https://twitter.com/AWSreInvent">@AWSreInvent</a> the rabbit icon was awarded to the team with the fastest response time to a request.0.0005s is not too shabby!</p>&mdash; Kyle Lichtenberg (@KyleLichtenberg) <a href="https://twitter.com/KyleLichtenberg/status/651573816301219840">October 7, 2015</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<p>ちなみに最速レスポンスタイムはうちのチームが叩きだした。</p>

<p><div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Our team - &quot;Ubercon&quot;! <a href="https://twitter.com/hashtag/reinvent?src=hash">#reinvent</a> <a href="https://twitter.com/hashtag/AWSGameDay?src=hash">#AWSGameDay</a> <a href="http://t.co/dpRu1vicgM">pic.twitter.com/dpRu1vicgM</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/651544851620700160">October 6, 2015</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<p>詳細は今度日本で開催されるかも知れないので控えておくが、非常に楽しめたので次回は運営側に回って手伝おうかと思います！</p>

<h2>Day 1</h2>

<h3>Keynote</h3>

<p>Andy Jessy副社長による発表。今年のテーマは「<strong>自由</strong>」</p>

<ul>
<li>Amazon QuickSight</li>
<li>Amazon Kinesis Firehose</li>
<li>Amazon Snowball</li>
<li>MariaDB for RDS</li>
<li>AWS Database Migration Service</li>
<li>AWS Schema Conversion Tool</li>
<li>AWS Config Rules</li>
<li>Amazon Inspector</li>
</ul>


<p><img src="https://lh3.googleusercontent.com/SSI_hMC3cjzUSvGPxT49FD26VBeY_QYt_qGoTLDPo8nBLwdmglM=w493-h544-no"></p>

<p><del>Oracle</del>からの自由、解放！</p>

<h3>WRK306 - AWS Professional Services Architecting Workshop</h3>

<p>実在した、ある企業のクラウド移行案件。RFP的なモノがあり、アーキテクチャをチーム内で議論し、最後にそれぞれ各チームが発表していく流れ。
かつてjawsugで主催を手伝ったワールドカフェ形式とほぼ同じだったので、チームメンバーを先導してCacooでさくさく構成図を起こしていく。
他のチームが模造紙にラフスケッチで発表する中、我らは綺麗に正本して、プロジェクターで登壇しながら発表。</p>

<p><div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">ワークショップはうちらのチームだけCacooで図を書いたので制覇した感がある。 <a href="https://twitter.com/hashtag/reinvent?src=hash">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/651869691699425281">October 7, 2015</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<p>最後に実際にどう移行したかというAWSチームからの回答。まず、移行フェーズを段階的に分け、最初はシステムをほぼそのままクラウド上に乗せた後に部分的に最適化してコンポーネントを置き換えて行ったという話。最後にLambdaになっていた部分があったのが興味深かった。</p>

<p>早く新サービスに対応したAWS Simple Iconsのアップデートが待たれるところ。</p>

<p><img src="https://lh3.googleusercontent.com/IVrSN7g0MnAfVa6pB4ajQWUZYPmpFMOH6Ych-FedX1HqxCfEHtc=w583-h346-no"></p>

<p>今回提案した内容。</p>

<h3>WRK305 - Zombie Apocalypse Survival: Building Serverless Microservices</h3>

<p><a href="https://ja.wikipedia.org/wiki/%E3%82%BE%E3%83%B3%E3%83%93%E3%81%AB%E3%82%88%E3%82%8B%E4%B8%96%E7%95%8C%E3%81%AE%E7%B5%82%E6%9C%AB">Zombie Apocalypse</a>が起こって、人類存亡の危機！途中まで実装されたチャットルームの機能を拡張・実装して危機を救え！というシナリオの元、LambdaとAPI Gatewayとjavascript sdkで実装されたサーバーレスアーキテクチャのワークショップ。</p>

<p>機能拡張の為に実装が必要なので、設計しながらチーム内で作業分担し、コードをせっせと書いていく。
ゾンビ出現のアラート通知、ヒートマップ描画、アンデッドカウンター、緊急食料倉庫の位置情報配信等、面白い機能要求が盛り沢山。</p>

<p><img src="https://lh3.googleusercontent.com/-UStcIzDdtS42SZTgt657iKvYHWlbcfktbvuCq3-LIioBfrBzgI=w600-h346-no"></p>

<p>ささっとSlack部屋を作り、githubでコードを共有しながらのチームワーク作業。多分、うちらのチームが一番多く実装できた感触。</p>

<p><img src="https://lh3.googleusercontent.com/WZ7nUMvRhoNzixWqjEdCFJ1wJqNH-BqjV4M4cq93mBXBnJ8UPOk=w493-h544-no"></p>

<p>このワークショップはかなりの人気で、開始30分前にすでに長蛇の列が。
運良くぎりぎり最後の参加者として入れたけど、皆どれだけゾンビが好きなんだ。。</p>

<h2>Day 2</h2>

<h3>Keynote</h3>

<p>Wernerl Vogels CTOの発表。</p>

<ul>
<li>Amazon Kinesis Analytics</li>
<li>X1 instance (100 cores, 1TB RAM)</li>
<li>t2.nano instance</li>
<li>Amazon EC2 Container Registry</li>
<li>Lambda

<ul>
<li>VPC support</li>
<li>Long running Functions (300s)</li>
<li>Scheduled Functions</li>
<li>Custom Retry Logic</li>
<li>Python</li>
</ul>
</li>
<li>AWS IOT</li>
</ul>


<p><img src="https://lh3.googleusercontent.com/A4p3UvP0JiMxjpZF7L0zxdMFkU96aOYtZ-BExM2zFERDsebakXw=w493-h543-no"></p>

<p>前日にAndyが7つの自由を語って、当日はWernerが7つの法則を語る。</p>

<h3>WRK308 - AWS + ASK: Teaching Amazon Echo New Skills</h3>

<p>Amazon Echoを使った、Alexaのプログラミングワークショップ。音声によって、Echo経由でLambdaイベントを呼び出し、Alexaサービスと連携するカスタマイズしたスキルセットを実装して行く。</p>

<p>例えば、Alexaに好きな色を覚えさせて、後ほど聞くと答えてくれる機能とか。全てボイスコントロール。<a href="http://yoshidashingo.hatenablog.com/?page=1445224481">吉田さんの英語でも通じた</a>ので、かなり優秀。</p>

<p>新品のEchoを開封して使ったので、最後に貰える物かとささやかに期待したものの、$15のAWSクーポン配布のみ。さすが<del>ケチ</del>FrugalなAmazonさん。</p>

<p><div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Alexaとlambdaが連携してEchoが喋った！ <a href="https://twitter.com/hashtag/reinvent?src=hash">#reinvent</a> <a href="http://t.co/V6QpNyj3tK">pic.twitter.com/V6QpNyj3tK</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/652234646231646208">October 8, 2015</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<p><div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Alexは今ユーザ駆動にしか対応してないけど、awsのイベント駆動はtop priorityとの事。そのうち例えばbilling alertを音声で通知できるようになるなぁ。楽しみだ。 <a href="https://twitter.com/hashtag/reinvent?src=hash">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/652239936968654848">October 8, 2015</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<h3>re:Play</h3>

<p>EDMの若きプリンスDJ、Zeddをシークレットゲストとして呼んでのアフター。</p>

<p><div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">What a view for this secret <a href="https://twitter.com/Zedd">@zedd</a> show, this crowd does not end! <a href="https://twitter.com/hashtag/vegas?src=hash">#vegas</a> <a href="http://t.co/0Itv012o0k">pic.twitter.com/0Itv012o0k</a></p>&mdash; Rukes (@rukes) <a href="https://twitter.com/rukes/status/652400784353595392">October 9, 2015</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<p>もう完全にWernerのパーティー。</p>

<p><div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">昨夜の <a href="https://twitter.com/hashtag/replay?src=hash">#replay</a> でこの積み上がったコンテナを見て、Docker Swarm を連想した人はさぞ多かったに違いない。 <a href="http://t.co/QxF2MkbHTi">pic.twitter.com/QxF2MkbHTi</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/652681828441063425">October 10, 2015</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<p><div class="embed-video-container"><iframe src="http://www.youtube.com/embed/cT676BMT7A8 "></iframe></div></p>

<p>Zeldaのremixが良かった。</p>

<h3>終わりに</h3>

<p>結局セッションは一つも出なかったです。まあ、ビデオやスライドは公開されるので内容自体は後で把握可能なので別にいいかな。授業を聞きに来た分けでもないし。
それよりも、現地に来ているエンジニアと交流したり、実装まで含んだハンズオンのワークショップをやった方が楽しいし、糧となる。後はトレンドを肌感覚として体感するには良い場所なので行った事ない人には是非オススメしておきたい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[#HashiConf 2015に参加してきた]]></title>
    <link href="http://ijin.github.io/blog/2015/09/30/hashiconf-2015/"/>
    <updated>2015-09-30T03:11:00+09:00</updated>
    <id>http://ijin.github.io/blog/2015/09/30/hashiconf-2015</id>
    <content type="html"><![CDATA[<p>Portlandで開催された<a href="https://www.hashiconf.com">HashiConf 2015</a>に参加してきました。</p>

<h2>Day 1</h2>

<h3>Keynote</h3>

<p>Founder &amp; CEOのMitchell Hashimotoが登壇。
今までのHashiCorpプロダクトを紹介した上で、新プロダクトの紹介！</p>

<p><img src="https://lh3.googleusercontent.com/kV2iR87ZYBN9LuPjMxGmuPxg1t1xzZLlcgi5LV_y8TwzSvsIOVE=w479-h638-no"></p>

<p><a href="https://nomadproject.io">Nomad</a></p>

<p>コンテナスケジューラ。ちょうどあるサービスの一部のDocker化でスケジューリング方法を考えていたので、グッドタイミング。</p>

<p><img src="https://lh3.googleusercontent.com/PaK-SUH-tybvL7ILwZFFXrYVdylvzw1cu0bFR8rKDadbIRgA8cA=w479-h638-no"></p>

<p><a href="https://ottoproject.io">Otto</a></p>

<p>開発からデプロイまで対応したmicroservicesを念頭に入れたVagrantの後継。</p>

<h3>Operating Consul as an Early Adopter</h3>

<ul>
<li>初期の頃からconsulを運用した苦労話</li>
<li>v0.2から始めた</li>
<li><code>consule-template</code>

<ul>
<li>スケールしない。v0.6ではマシに</li>
<li>大きいクラスタで自身をDDOSする</li>
<li>watchesを使わないでcronで<code>-once</code></li>
</ul>
</li>
<li>consulのDNSが不安定な時期があったので、15秒毎にzone fileを書き出し内部DNSで運用</li>
<li>その他初期バージョンで諸々不具合を発見してArmonと一緒に修正</li>
<li>ご苦労様</li>
</ul>


<h3>HashiCorp Tools in the Modern Enterprise</h3>

<ul>
<li>エンプラだって頑張ってDevOpsしてるもん！</li>
<li>文字多めで眠くなっちゃった。。</li>
<li><a href="https://atlas.hashicorp.com/izanamee">Izanamee</a> イザナミ？</li>
</ul>


<h3>Resillient Infrastructure with Serf</h3>

<ul>
<li>Pagerdutyの人</li>
<li>SerfとChefと自社ツールを組み合わせて堅牢なインフラを構築</li>
<li><a href="https://github.com/PagerDuty/blender">Blender</a> - a modular remote command execution framework</li>
<li><a href="https://github.com/ranjib/serfx">SerfX</a> - a bare minimum ruby client for serf</li>
</ul>


<h3>Genesis: Terraforming a new Firefox crash stat infrastructure</h3>

<ul>
<li>Mozillaの人達による漫才ベースのプレゼン</li>
<li>Firefoxのクラッシュ統計データを受信するインフラの構築について</li>
<li>結構笑いがとれてた</li>
</ul>


<h3>The future of management, and how we'll get there</h3>

<p>Puppetの作者Lukeさん。未来に観するディープで知見溢れるトーク</p>

<h2>Day 2</h2>

<h3>Keynote</h3>

<p>HashiCorpの哲学とAtlasの説明（2日目は新製品の発表はなし）</p>

<p><img src="https://lh3.googleusercontent.com/XzbJrBKpfWU73lMGv5tVFmfV90Uvyec7WWiizweiv_uTbZEEusY=w619-h465-no"></p>

<h3>Dockerizing all the Things</h3>

<ul>
<li>Docker社内でのCIでconsul使ってるよって話</li>
<li>あまり面白くなかった</li>
<li>20分も残して終了。。</li>
</ul>


<h3>Automate your Infrastructure</h3>

<p>以下のツールでいろいろ自動化してるよ（ﾌｰﾝ）</p>

<ul>
<li>Terraform</li>
<li>CircleCI</li>
<li>Docker (ECS)</li>
<li>Datadog</li>
<li>Slack</li>
</ul>


<h3>Managing Applications at Scale</h3>

<ul>
<li>CoreOSの人</li>
<li>Nomad vs Kubernetes</li>
<li>CLI demo</li>
</ul>


<h3>Repeatable, Extensible Infra at Yelp</h3>

<ul>
<li>YelpのSite Reliability Engineer</li>
<li>内部ツールで起動、puppetでプロビジョニング</li>
<li>Packerやpuppet managed VPCだったけど、今はTerraform</li>
<li>Smartstack (Service discovery)

<ul>
<li>Nerve</li>
<li>Synapse</li>
<li>Hacheck</li>
<li>qdisc_tools</li>
</ul>
</li>
<li>Sensu</li>
<li>nsone</li>
<li><a href="https://github.com/terraform-community-modules">terraform community modules</a>をたくさん書いたよ</li>
</ul>


<h3>Virtual Machines, Containers, Lambdas? Oh my!</h3>

<ul>
<li>AWSの中の人（DevOps担当）</li>
<li>Microservicesについて</li>
<li>導入の判断基準</li>
<li>VM（EC2, Packer, Terraform/Cloudformatio, Consul)</li>
<li>Container (ECS, Nomad)</li>
<li>Lambda (サーバレスアーキテクチャ。例：<a href="http://squirrelbin.com">SquirrelBin</a></li>
<li>さらっと自社サービスをたっくさん紹介した後、結論はLambdaとAPI Gateway押し</li>
<li>そんなにサービスを詰めこめなくても。。</li>
</ul>


<h2>感想</h2>

<p>Nomadの発表が一番エキサイティングだったけど、こういうカンファレンスは中の人やスピーカーや他のユーザーと直接話せるのが醍醐味。プロダクトの担当者に直接フィードバックを伝えたり、展望を聞いたりできて楽しかったです。また、会場で話した参加者も多種多様でアメリカ以外だとスペイン、オーストラリア、ニュージーランド、インド、日本等がいて、世界中から注目されている感じでした。</p>

<p>第一回目ということで約300人の中規模だけど、このぐらいが皆の距離感近くて良い雰囲気。</p>

<h2>その他</h2>

<ul>
<li>懇親会で飛び込みLTしたかったが会場設備が対応できなく、断念</li>
<li>Portland心地良くて過ごしやすい！</li>
<li>記念にもらったHashiCorpとハシ（箸）をかけたジュークは誰も理解してなかった
（Mitchellが言うには日本人参加者が理解してくれるから良いんだと）</li>
</ul>


<p><img src="https://lh3.googleusercontent.com/50dhedo-8s4QS_7Chw6v1U6Ow58b4d53HHYlVQGQ6hwwuN6CT7c=w427-h320-no"></p>

<p>さて、来週はre:Inventだ！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ISUCON5の予選に記念参加してきた]]></title>
    <link href="http://ijin.github.io/blog/2015/09/27/isucon5-qualifier/"/>
    <updated>2015-09-27T17:01:00+09:00</updated>
    <id>http://ijin.github.io/blog/2015/09/27/isucon5-qualifier</id>
    <content type="html"><![CDATA[<p>とあるエンジニアが言い放ちました。</p>

<p>「<em>上位に届かないチームはただの記念参加だよねー。</em>」</p>

<p>というわけで、今年のISUCONは見事に予選落ちしました。</p>

<h3>お題</h3>

<p>「<strong>ISUx</strong>i」というどこか懐かしい響きの「高負荷に耐えられるSNSコミュニティサイト」</p>

<p>友達、記事、コメント、足あと機能が揃っており、以前より複雑度が増したなかなかの凝った作り。</p>

<h3>起こったこと</h3>

<p>これはESIによるpartial cachingが出来るので、Varnishでやってみよう！</p>

<p>と意気込んだものの、エラーが解決できず結局は間に合わずに終了ーーっ。</p>

<h3>やりたかったこと</h3>

<ul>
<li>Varnish + ESI + Redis &amp; MySQL</li>
</ul>


<h3>やれたこと</h3>

<p>具体的な作業内容は今手元にないので、ぼんやりと。</p>

<ul>
<li>MySQLのクエリー修正、パラメータ、Indexの追加</li>
<li>nginxのパラメータ追加</li>
<li>kernelのパラメータ追加</li>
<li>一部 redis化</li>
<li>rubyプロセスの調整</li>
<li>sidekiqのワーカーで遅延書き込み</li>
</ul>


<h3>はまったとこ</h3>

<p>今回はいろいろ初めてがあったので無駄に時間を潰した感じ。</p>

<ul>
<li><code>systemd</code> -
最新のUbuntu 15.04はsystemdなんですね。ずっと14.04 LTSのupstartに慣れていたので、こっちは初めて触わった。</li>
<li><code>apparmor</code> -
設定ファイルをsymlinkでやろうとすると読み込まれず。。こいつのせいだと気づくのにちょっと手間取った。いらない子には怒りの<code>apt-get purge</code>を。</li>
<li><code>mysql</code> -
なんか設定ファイルが/etc/mysql/my.cnf単体じゃなくて、symlinkされたりいろんなディレクトリに散らばってたりで若干戸惑った。後、上記のapparmor関連で設定ファイルがしばらく全然反映されずに。。</li>
<li><code>varnish</code> -
こちらもvclやパラメータ指定が本来<code>/etc/default/varnish</code>で出来るはずが、なかなか反映されずに苦労した。Varnish 4.0のパッケージはapt-getですんなり入るんだけど、起動スクリプトが<code>/etc/init.d/varnish</code>に設置されるのに、そちらは無視され、systemdの方が優先される模様。カスタマイズするには<code>/lib/systemd/system/varnish.service</code>をコピって編集して<code>daemon-reload</code>が必要。詳しくは<a href="http://deshack.net/how-to-varnish-listen-port-80-systemd/">こちら</a></li>
</ul>


<h3>終わりに</h3>

<p>競技内容が確実に進化していて、非常ーーに楽しめました！その分、出題者の苦労が計り知れず。。こんどビールでも奢ります。今年の本戦は残念ながら行けないけど、外野として楽しくポップコーンでも食べながら観戦したい所ですね。</p>

<h3>おまけ</h3>

<p>現在はHashiConfに向けての飛行機の中だけど、悔しいので機内で復習しておきます！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[サバフェス！2015に参加してきた]]></title>
    <link href="http://ijin.github.io/blog/2015/03/27/serverfesta-2015-spring/"/>
    <updated>2015-03-27T12:56:00+09:00</updated>
    <id>http://ijin.github.io/blog/2015/03/27/serverfesta-2015-spring</id>
    <content type="html"><![CDATA[<p><a href="http://connpass.com/event/11571/">サバフェス！2015 Spring</a>に参加してきました。
やった内容を少々。</p>

<p><a href="/blog/2013/12/13/serverfesta-2013-autumn">前回</a>と同じくチーム@ijinとして1人で参戦して、順位は「<strong>4位</strong>」。</p>

<p>スコアは<strong>44988.867 TpmC</strong>でした。</p>

<h2>お題</h2>

<p>Mysql on ioDriveでtpcc-mysqlベンチマークのtransaction throughput競争。</p>

<p>第1陣と第2陣に分かれていて、今回は後者での参戦。</p>

<h2>はじめに</h2>

<p>競技期間は5日間あったものの、第1陣で<a href="http://netmark.jp/2015/03/svfes-2.html">結構な地雷があった</a>のと、Fusion-IO（現SanDisk）のioDriveとtpcc-mysqlは2年前に<a href="/blog/2013/02/22/mysql-benchmarks-on-aws-ssd-vs-fusion-io/">触った</a>ので最初はあんまりやる気が起きなくて困ってました。後は前回と違って施せる施策がかなり限定されるというので、正直5日間は長過ぎるのではないかという印象でした。（結果的に第1陣のトラブルとかを鑑みると長さ的には良かったのかも知れないけど）</p>

<p>という事で初日はログインとベンチで基準値を取るだけして終了。</p>

<p>その後、最近のMySQLやioDrive周りの情報収集を軽ーくして数日が経過。。</p>

<p>そして最終日の夜中になって、なんとか本腰を入れてチューニング開始。まあ、やりだしたら楽しいんですけどね。</p>

<h2>マシンスペック</h2>

<ul>
<li>CentOS 6.4</li>
<li>Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz x 32</li>
<li>32GB RAM</li>
<li>40G HDD</li>
<li>320GB ioDrive</li>
</ul>


<h2>制限</h2>

<pre><code>innodb_doublewrite = 1
innodb_flush_log_at_trx_commit = 1
</code></pre>

<p>その他レギューレーションは<a href="https://2015spring.serverfesta.info/?page_id=299">こちら</a></p>

<h2>方針</h2>

<p>今までのtwitterの<a href="https://twitter.com/search?q=%23%E3%82%B5%E3%83%90%E3%83%95%E3%82%A7%E3%82%B9">タイムライン</a>からして、どうもベンチをウェブ画面から要求しても並列実行の数とキューイング、及び非常に長い実行時間からして1時間に一回実行できるかどうかも怪しかったのでローカルでこまめに回す方向に。</p>

<p>本番データはtpccの1000 warehouse（70GB+）、16GB Buffer Pool、900sの実行時間だったのでそれを250 warehouse, 4GB Buffer Poolと縮小し120sと短めに設定。こうすることによってローカルでのデータコピー時間やベンチ実行時感が短縮され、時間がない中での細かいパラメータのチューニングに専念できる。Buffer Poolはどうせ一番効くと分かりきってるので、あえて後回し。DBは6年前（MySQL 5.0時代）から手に滲んで愛用しているPercona Serverの5.6版を選択。</p>

<p>スコアの推移はこんな感じ。データセットが小さい分、スコアは大きめ。</p>

<p><img src="https://docs.google.com/spreadsheets/d/1zm6-THRYR_EcLoHgacRScxlhSzeQAkbJ0RXiAI4fiRU/pubchart?oid=1067951178&amp;format=image"></p>

<p>終盤になってやっと本番に近いデータセットや実行時感で細かいチューニング。</p>

<p><img src="https://docs.google.com/spreadsheets/d/1zm6-THRYR_EcLoHgacRScxlhSzeQAkbJ0RXiAI4fiRU/pubchart?oid=2026636320&amp;format=image"></p>

<p>最終的にローカルでのベストスコアは<strong>53420.332 TpmC</strong>でした。</p>

<h2>設定ファイル</h2>

<script src="https://gist.github.com/ijin/341bab7569e372e1addb.js"></script>


<h2>効果があったもの</h2>

<p>細かいおまじないレベルでのパラメータも他にいくつあったけど、割と効いたのをピックアップ。また、既に設定されていたパラメータは除外（innodb_io_capacity等）</p>

<p>mysql</p>

<pre><code>datadir=/fioa/mysql
tmpdir=/fioa/tmp
sync_binlog=0
innodb_buffer_pool_size = 28150M
innodb_buffer_pool_instances=16
innodb_log_file_size=4G
innodb_log_files_in_group=3
innodb_log_group_home_dir=/var/log/mysql
innodb_log_buffer_size=64M
innodb_data_file_path=ibdata1:76M;../../var/log/mysql/ibdata2:500M:autoextend
innodb_checksum_algorithm=0
innodb_max_dirty_pages_pct=90
innodb_lru_scan_depth=2000
numa_interleave=1
flush_caches
malloc-lib=/usr/lib64/libjemalloc.so.1
</code></pre>

<p>etc</p>

<pre><code>vm.swappiness=1
mount option (noatime,nodiratime,  max_batch_time=0,nobarrier,discard)
cache warmup
</code></pre>

<p>基本的にはioDriveにIOをなるべく発生させない、もしくは遅延させる関連のパラメータが効いた感じ。この辺は割と正統なチューニング方法。一つ、若干工夫したのは、doublewrite buffer fileの指定方法。シーケンシャルなIOが発生するログ周りの処理はHDDに逃がした方がioDrive/SSD的には負荷低減になるけど、Percona 5.5までは<strong>innodb_doublewrite_file</strong>というパラメータでいつも指定していたのが、5.6ではなんと未実装！なのでベンチマーク前にコピーされるibdata1の予めのサイズを計っておいて、以降の書き込みをHDD側へ逃がすように<strong>innodb_data_file_path</strong>で調整。</p>

<p>他はNUMAによるメモリの偏り調整とmallocライブラリを使う指定。この辺もPerconaやMariaDB専用オプション。</p>

<p>後は一応初動のスコアをちょっとだけ稼ぐためにmysqlのstartup script内にてテーブルをcount(*)してindexをbuffer poolに乗せたぐらい。</p>

<h2>効果が微妙だったもの</h2>

<p>mysql</p>

<pre><code>innodb_flush_method=ALL_O_DIRECT
innodb_support_xa=0
innodb_thread_concurrency=N
innodb_flush_neighbors=0
query_cache_size=0
large-pages
</code></pre>

<p>etc</p>

<pre><code>echo 'noop' &gt; /sys/block/fioa/queue/scheduler
echo 4096 &gt; /sys/block/fioa/queue/nr_requests
echo 2 &gt; /sys/block/fioa/queue/rq_affinity
renice -n19 -p `ps auxf | grep mackerel | grep -v grep | awk ‘{print $2}’`
</code></pre>

<p>large-pagesでページサイズを大きく設定すればメモリ効率は向上するはずが、少なくともベンチマークにおいては効果なし。また、スケジューラをnoopやdeadlineと変えたり、nr_requestsやrq_affinityを調整してみたけど、デフォルトのOS bypass設定と比べてあまり変化なし。</p>

<h2>試したかったもの</h2>

<ul>
<li>ioDrvieのblock sizeのリサイズ</li>
<li>C0 state（CPUのC stateを制御して変動させずにioDriveの処理向上の期待）</li>
<li>numa_node_forced_local（IO処理をメモリに一番近接しているCPUで行う）</li>
<li>IRQ pinning（ioDriveのIRQを固定）</li>
<li>network tuning</li>
</ul>


<p>この中で最後やることリストに乗っけていながらやらなかったネットワーク周りのチューニング。多分、これが敗因。（1位のチームzzz(<a href="https://twitter.com/ttkzw">@ttkzwさん</a>)はローカルベンチマークで51000ぐらいだったので）もっとリモートからベンチが実行される事に意識を向ければ良かったのかもしれないですね。とはいえ、最後はキュー待ちが8チームだったり、結果が不具合で見れなかったりと、バダバタしてたのでそっちに気を取られたのもまた事実。まあ、半日ちょいのチューニングにしてはそこそこ行った感じでしょうか。</p>

<h2>終わりに</h2>

<p>最初は運営側が「目下実装中です！」といいながら<strong>#トラしゅ</strong>をしているような感じでちょっと不安でしたが、最後は（第2陣という事もあり）それなりに楽しめました。ベンチマーク時間の短縮と並列実行数がもうちょっと増やせたらよかったですかね。運営側の皆様、大変お疲れさまでした！</p>

<h2>おまけ</h2>

<p>賞品として3DマッサージピローとSSDを頂きました！</p>

<p><div class='embed tweet'><blockquote class="twitter-tweet"><p>3DマッサージピローとSSDをもらった。 <a href="https://twitter.com/hashtag/%E3%82%B5%E3%83%90%E3%83%95%E3%82%A7%E3%82%B9?src=hash">#サバフェス</a> <a href="http://t.co/mKczn9mflZ">pic.twitter.com/mKczn9mflZ</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/581048257171820544">March 26, 2015</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

<p>個人敵には飛び込みLTした人がもらったDroneの方が良さそうだったけど、ピローは家族に好評でした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ISUCON4の本戦の思い出]]></title>
    <link href="http://ijin.github.io/blog/2014/12/31/isucon4-final/"/>
    <updated>2014-12-31T20:52:00+09:00</updated>
    <id>http://ijin.github.io/blog/2014/12/31/isucon4-final</id>
    <content type="html"><![CDATA[<p>ISUCON4の本戦の直後にそのままAWS re:Inventへ行ったきりエントリを書いてなかったので思い出だけでも年内に書いておく。</p>

<p>内容の<a href="http://isucon.net/archives/41252218.html">エントリ</a>はたくさんあるので、詳しい内容なそちらに任せます。</p>

<p>結果は予選よりちょい上の<strong>15位</strong>。まあ、中間層は結構団子状態だったので誤差の範囲とも言えますが。。</p>

<h2>Cache-Control</h2>

<p>結局はCache-Controlヘッダーに気づくかどうかという点にかかっていて、達成したのは<a href="http://isucon.net/archives/41634734.html">2チーム</a>のみ。優勝チームのモリスさんが「頭から煙が出る程考えて」やっと直前に答えにたどり着いた事を考えると、ベンチマークツールの挙動が若干不思議な実装になっていたとはいえ、思慮深さが足りなかったと反省。</p>

<h2>冒険しすぎた</h2>

<p>今回はrubyとGoのハイブリッド構成でもろもろチューニング。が、しばらくして帯域が頭打ちに。。
また、その間にメンバーの一人の<a href="https://twitter.com/fruwe">@fruwe</a>に<a href="http://undertow.io/">Undertow</a>というjavaのフレームワークでチャレンジしてもらうものの（事前の技術検証では結構期待できそうだった）、実装完走にはいたらず。この辺は冒険し過ぎたかな。。振り返ってみれば、結局2位のチームがブレークスルーをしたのを見て、全作業を一旦ストップしてでも皆で考えなおす行動を取れば良かったのかもしれないですね。ただ、当時は予選でのベンチマークツールがいささか不安定だった事と運営側もリアルタイムでバグフィックスをしてたという事情もあり、きっとバグか何かだろうとあまり気にしてなかったのも確か。</p>

<h2>最後に</h2>

<p>とまあ、不完全燃焼だったけど、なんだかんだで面白かったです。運営＆参加者の皆様お疲れ様でした。来年またあるか分からないけど、楽しみにしています。</p>
]]></content>
  </entry>
  
</feed>
